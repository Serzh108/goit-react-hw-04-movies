{"version":3,"sources":["pages/Cast.js"],"names":["axios","defaults","baseURL","Cast","state","castInfo","getData","query","a","movieDetails","settings","process","get","response","setState","prev","data","cast","console","log","filmId","this","props","match","params","movieId","map","item","key","cast_id","className","src","profile_path","alt","name","character","Component"],"mappings":"0NAIAA,IAAMC,SAASC,QAAU,gC,IAOnBC,E,4MACJC,MAAQ,CAAEC,SAAU,I,EAOpBC,Q,uCAAU,WAAMC,GAAN,iBAAAC,EAAA,6DACFC,EADE,UACgBC,KADhB,OACwCH,EADxC,4BACiEI,oCADjE,kBAGiBX,IAAMY,IAAIH,GAH3B,OAGAI,EAHA,OAIN,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACrBV,SAAUQ,EAASG,KAAKC,SALpB,gDAQNC,QAAQC,IAAI,UAAZ,MARM,yD,wHAJR,IAAMC,EAASC,KAAKC,MAAMC,MAAMC,OAAOC,QACvCL,GAAUC,KAAKf,QAAQc,K,+BAef,IACAf,EAAagB,KAAKjB,MAAlBC,SACR,OACE,4BACGA,EAASqB,KAAI,SAAAC,GAAI,OAChB,wBAAIC,IAAKD,EAAKE,SACZ,yBACEC,UAAU,UACVC,IACEJ,EAAKK,aAAetB,IAAqBiB,EAAKK,aAAe,GAE/DC,IAAKN,EAAKO,OAEZ,2BAAIP,EAAKO,MACT,yCACa,8BAAOP,EAAKQ,qB,GAnClBC,aA4CJjC","file":"static/js/3.32f23f8c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as settings from '../components/settings';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\n\r\n// const settings = {\r\n//   movieDetails: 'movie/',\r\n//   imagePath: 'https://image.tmdb.org/t/p/w500',\r\n// };\r\n\r\nclass Cast extends Component {\r\n  state = { castInfo: [] };\r\n\r\n  componentDidMount() {\r\n    const filmId = this.props.match.params.movieId;\r\n    filmId && this.getData(filmId);\r\n  }\r\n\r\n  getData = async query => {\r\n    const movieDetails = `${settings.movieDetails}${query}/credits?api_key=${process.env.REACT_APP_MOVIEDB_KEY}`;\r\n    try {\r\n      const response = await axios.get(movieDetails);\r\n      this.setState(prev => ({\r\n        castInfo: response.data.cast,\r\n      }));\r\n    } catch (error) {\r\n      console.log('Error: ', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { castInfo } = this.state;\r\n    return (\r\n      <ul>\r\n        {castInfo.map(item => (\r\n          <li key={item.cast_id}>\r\n            <img\r\n              className=\"CastImg\"\r\n              src={\r\n                item.profile_path ? settings.imagePath + item.profile_path : ''\r\n              }\r\n              alt={item.name}\r\n            />\r\n            <p>{item.name}</p>\r\n            <p>\r\n              Character: <span>{item.character}</span>\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n"],"sourceRoot":""}