{"version":3,"sources":["pages/MoviesPage.js"],"names":["axios","defaults","baseURL","MoviesPage","state","selectedMoviesList","value","handleSubmit","e","preventDefault","target","elements","setState","getData","props","history","push","pathname","location","search","handleOnChange","query","a","searchFilm","settings","process","get","response","prev","data","results","console","log","this","moviesList","onSubmit","type","name","onChange","map","movie","key","id","to","from","title","Component"],"mappings":"yOAKAA,IAAMC,SAASC,QAAU,gC,IAKnBC,E,4MACJC,MAAQ,CACNC,mBAAoB,GACpBC,MAAO,I,EAGTC,aAAe,SAAAC,GACbA,EAAEC,iBACF,IAAMH,EAAQE,EAAEE,OAAOC,SAAS,GAAGL,MACnC,EAAKM,SAAS,CAAEN,UAChB,EAAKO,QAAQP,GACb,EAAKQ,MAAMC,QAAQC,KAAK,CACtBC,SAAU,EAAKH,MAAMI,SAASD,SAC9BE,OAAO,UAAD,OAAYb,M,EAKtBc,eAAiB,SAAAZ,GAAC,OAAI,EAAKI,SAAS,CAAEN,MAAOE,EAAEE,OAAOJ,S,EAEtDO,Q,uCAAU,WAAMQ,GAAN,iBAAAC,EAAA,0DACJD,EADI,wBAEAE,EAFA,UAEgBC,IAFhB,oBAEkDC,mCAFlD,kBAE6FJ,GAF7F,kBAImBrB,IAAM0B,IAAIH,GAJ7B,OAIEI,EAJF,OAKJ,EAAKf,UAAS,SAAAgB,GAAI,MAAK,CACrBvB,mBAAmB,YAAKsB,EAASE,KAAKC,aANpC,gDASJC,QAAQC,IAAI,UAAZ,MATI,yD,6GAcA,IAAD,SAC2CC,KAAK7B,MAA3B8B,EADrB,EACC7B,mBAAgCC,EADjC,EACiCA,MACxC,OACE,oCACE,0BAAM6B,SAAUF,KAAK1B,cACnB,2BACE6B,KAAK,OACLC,KAAK,SACL/B,MAAOA,EACPgC,SAAUL,KAAKb,iBAEjB,4BAAQgB,KAAK,UAAb,WAGF,4BACGF,EAAWK,KAAI,SAAAC,GAAK,OACnB,wBAAIC,IAAKD,EAAME,IACb,kBAAC,IAAD,CACEC,GAAI,CACF1B,SAAS,WAAD,OAAauB,EAAME,IAC3BtC,MAAO,CAAEwC,KAAM,EAAK9B,MAAMI,YAE3BsB,EAAMK,iB,GAxDEC,aAkEV3C","file":"static/js/5.f61c50bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as settings from '../components/settings';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\n// const settings = {\r\n//   keyWordSearch: 'search/movie',\r\n// };\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    selectedMoviesList: [],\r\n    value: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const value = e.target.elements[0].value;\r\n    this.setState({ value });\r\n    this.getData(value);\r\n    this.props.history.push({\r\n      pathname: this.props.location.pathname,\r\n      search: `?query=${value}`,\r\n    });\r\n    // this.props.location.search = `?query=${value}`;\r\n  };\r\n\r\n  handleOnChange = e => this.setState({ value: e.target.value });\r\n\r\n  getData = async query => {\r\n    if (query) {\r\n      const searchFilm = `${settings.keyWordSearch}?api_key=${process.env.REACT_APP_MOVIEDB_KEY}&query=${query}`;\r\n      try {\r\n        const response = await axios.get(searchFilm);\r\n        this.setState(prev => ({\r\n          selectedMoviesList: [...response.data.results],\r\n        }));\r\n      } catch (error) {\r\n        console.log('Error: ', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedMoviesList: moviesList, value } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            value={value}\r\n            onChange={this.handleOnChange}\r\n          />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        <ul>\r\n          {moviesList.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: { from: this.props.location },\r\n                }}>\r\n                {movie.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}